#!/bin/bash -il

# Copied from: https://github.com/conda-forge/docker-images/blob/master/scripts/entrypoint

# Use non-interactive cp
unalias cp

# Create conda user with the same uid as the host, so the container can write
# to mounted volumes
# Adapted from https://denibertovic.com/posts/handling-permissions-with-docker-volumes/
USER_ID=${HOST_USER_ID:-9001}
useradd --shell /bin/bash -u $USER_ID -G lucky -o -c "" -m conda
export HOME=/home/conda
export USER=conda
export LOGNAME=conda
export MAIL=/var/spool/mail/conda
export PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/home/conda/bin
export supkg="su-exec"
chown conda:conda $HOME
cp -R /etc/skel $HOME && chown -R conda:conda $HOME/skel && (ls -A1 $HOME/skel | xargs -I {} mv -n $HOME/skel/{} $HOME) && rm -Rf $HOME/skel

# This is needed to have a predictable channel specification used for builds
# from non-conda-forge channels as conda-smithy does not remove it for us.
rm -f /opt/conda/.condarc

cp /root/.condarc $HOME/.condarc && chown conda:conda $HOME/.condarc
cd $HOME

# Add `CUDA_HOME` binaries to `PATH`.
export PATH="${PATH}:${CUDA_HOME}/bin"

# Activate the `base` conda environment.
conda activate base

# Run whatever the user wants.
exec /opt/conda/bin/$supkg conda "$@"
